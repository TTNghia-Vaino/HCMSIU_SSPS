@model IEnumerable<HCMSIU_SSPS.Models.PrintJob>

@{
    ViewData["Title"] = "Print Jobs List";
}
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet" />
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>



<h1 class="text-center mt-4 mb-5">Print Jobs List</h1>
<!--Tạo 1 ajax cho phép select từ ngày A tới ngày B, theo ngày, theo tháng, theo năm được chọn, nếu là tháng mặc định A là đầu tháng, B là cuối tháng, theo năm A là 1/1 của năm B là 31/12 của năm-->
<div class="container">
    <div class="mb-4">
        <label for="dateType">Filter By:</label>
        <select id="dateType" class="form-control">
            <option value="day">Day</option>
            <option value="month">Month</option>
            <option value="year">Year</option>
        </select>
        <div id="dateFilter">
            <label for="startDate">From:</label>
            <input type="date" id="startDate" class="form-control" />
            <label for="endDate">To:</label>
            <input type="date" id="endDate" class="form-control" />
        </div>
        <div id="monthFilter" class="d-none">
            <label for="month">Select Month:</label>
            <input type="month" id="month" class="form-control" />
        </div>
        <div id="yearFilter" class="d-none">
            <label for="year">Select Year:</label>
            <input type="number" id="year" class="form-control" min="2000" max="2100" />
        </div>
        <button id="filterBtn" class="btn btn-primary mt-3">Filter</button>
    </div>
    <div class="table-responsive">
        <table class="table table-bordered table-striped">
            <thead class="thead-dark">
                <tr>
                    <th>@Html.DisplayNameFor(model => model.FileName)</th>
                    <th>@Html.DisplayNameFor(model => model.PageCount)</th>
                    <th>@Html.DisplayNameFor(model => model.TotalPages)</th>
                    <th>@Html.DisplayNameFor(model => model.Copies)</th>
                    <th>@Html.DisplayNameFor(model => model.IsDoubleSided)</th>
                    <th>@Html.DisplayNameFor(model => model.StartTime)</th>
                    <th>@Html.DisplayNameFor(model => model.EndTime)</th>
                    <th>@Html.DisplayNameFor(model => model.Printer)</th>
                    <th>@Html.DisplayNameFor(model => model.User)</th>
                    <th style="width: 80px;"> @Html.DisplayNameFor(model => model.Status) </th> <!--làm cho cột này rộng ra 1 tí-->
                    <th class="text-center" style="width:300px">Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>@Html.DisplayFor(modelItem => item.FileName)</td>
                        <td>@Html.DisplayFor(modelItem => item.PageCount)</td>
                        <td>@Html.DisplayFor(modelItem => item.TotalPages)</td>
                        <td>@Html.DisplayFor(modelItem => item.Copies)</td>
                        <td>@Html.DisplayFor(modelItem => item.IsDoubleSided)</td>
                        <td>@item.StartTime?.ToString("g")</td>
                        <td data-id="@item.PrintJobId">
                            @item.EndTime?.ToString("g")  <!-- Hiển thị EndTime hoặc "N/A" nếu null -->
                        </td>
                        <td>@item.Printer?.PrinterId</td>
                        <td>@item.User?.UserName</td>
                        <td data-id="@item.PrintJobId">
                            @(item.Status == 0 ? "Pending" : (item.Status == 1 ? "Done" : "N/A"))
                        </td>


                        <td class="text-center">
                           @*  <a asp-action="Edit" asp-route-id="@item.PrintJobId" class="btn btn-warning btn-sm">Edit</a> *@ <!--Viết Ajax cho cái button này button tên là đỏi trạng thái, sẽ tác động lên item.status, nếu đang là 0 thì đổi thành 1, 1 thì đổi thành 0 -->
                            <button class="btn btn-warning btn-sm changeStatusBtn"
                                    data-id="@item.PrintJobId"
                                    data-status="@item.Status">
                                Change Status
                            </button>
                           <a asp-action="Details" asp-route-id="@item.PrintJobId" class="btn btn-info btn-sm">Details</a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>


<script>
    $(document).ready(function () {
        // Lắng nghe sự kiện click cho tất cả các nút "Change Status"
        $('button.changeStatusBtn').click(function () {
            var button = $(this);  // Lấy đối tượng button đã click
            var printJobId = button.data('id');  // Lấy printJobId từ thuộc tính data-id
            var currentStatus = button.data('status');  // Lấy status hiện tại từ thuộc tính data-status

            // Chuyển trạng thái mới (nếu 0 thì chuyển thành 1, ngược lại)
            var newStatus = currentStatus === 0 ? 1 : 0;

            // Gửi AJAX request đến controller để thay đổi trạng thái
            $.ajax({
                url: '/Admin/PrintJobs/ChangeStatus',  // Địa chỉ controller action
                type: 'POST',
                data: {
                    printJobId: printJobId,
                    currentStatus: currentStatus  // Truyền trạng thái hiện tại
                },
                success: function (data) {
                    if (data.success) {
                        // Cập nhật lại trạng thái của thẻ <td> chứa Status
                        var statusText = (data.newStatus === 0) ? 'Pending' : 'Done';

                        // Cập nhật lại nội dung của thẻ <td> có data-id tương ứng cho Status
                        $('td[data-id="' + printJobId + '"]').text(statusText);

                        // Cập nhật lại EndTime nếu có
                        var endTimeText = data.newEndTime ? new Date(data.newEndTime).toLocaleString() : 'N/A';

                        // Tìm dòng chứa printJobId và cập nhật cột EndTime (thẻ <td> thứ 2 trong dòng)
                        var row = button.closest('tr');  // Lấy dòng (row) của printJobId
                        row.find('td:eq(6)').text(endTimeText);  // Cập nhật cột thứ 7 (EndTime) trong dòng (chỉ mục bắt đầu từ 0)

                        // Cập nhật lại data-status của button để phù hợp với trạng thái mới
                        button.data('status', data.newStatus);
                    } else {
                        alert('Error: ' + data.message);
                    }
                },
                error: function () {
                    alert('An error occurred while changing status.');
                }
            });
        });
    });
</script>
<script>
    $(document).ready(function () {
        $('#dateType').change(function () {
            const type = $(this).val();
            $('#dateFilter, #monthFilter, #yearFilter').addClass('d-none');
            if (type === 'day') {
                $('#dateFilter').removeClass('d-none');
            } else if (type === 'month') {
                $('#monthFilter').removeClass('d-none');
            } else if (type === 'year') {
                $('#yearFilter').removeClass('d-none');
            }
        });

        $('#filterBtn').click(function () {
            const type = $('#dateType').val();
            let data = {};

            if (type === 'day') {
                data = {
                    type: 'day',
                    startDate: $('#startDate').val(),
                    endDate: $('#endDate').val(),
                };
            } else if (type === 'month') {
                const month = $('#month').val();
                const [year, m] = month.split('-');
                data = {
                    type: 'month',
                    startDate: `${year}-${m}-01`,
                    endDate: `${year}-${m}-31`,
                };
            } else if (type === 'year') {
                const year = $('#year').val();
                data = {
                    type: 'year',
                    startDate: `${year}-01-01`,
                    endDate: `${year}-12-31`,
                };
            }

            $.ajax({
                url: '/Admin/PrintJobs/FilterByDate',
                type: 'POST',
                data: JSON.stringify(data),
                contentType: 'application/json',
                success: function (response) {
                    // Replace the table body with new data
                    $('tbody').html(response);
                },
                error: function () {
                    alert('Error while filtering data.');
                }
            });
        });
    });


</script>





